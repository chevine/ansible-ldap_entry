# New module on ansible 2.3 :
# http://docs.ansible.com/ansible/ldap_entry_module.html
---
- hosts: localhost
  tasks:

    # Open the OpenVPN via nmcli (network manager)
    - name: Enable OpenVPN to Name
      changed_when: false
      failed_when: false
      command: "nmcli connection up Name"
      when: nmcli_name is defined

- hosts: ldap_server
  vars:
    # For ldap_lookup (aka ldapsearch)
    ldap_lookup_config:
      url: ldaps://ldap_server:636
      base: dc=XXXX,dc=XXX
      binddn: cn=readonly,dc=XXXX,dc=XXX
      bindpw: 'XXXXX'
      scope: subtree
      filter: (objectClass=*)
      tls_reqcert: never
    # Get ALL UidNumber
    AllUidNumber:
      base: ou=People,dc=XXXX,dc=XXX
      value: 
        - AllUidNumber: always_list=True
    # For ldap_entry & ldap_attr
    dc: "dc=XXXX,dc=XXX"
    server_uri: "ldaps://ldap_server:636"
 
  gather_facts: no
  tasks:
    #Prepare ALL variable :
    - name: Get all uid
      set_fact: uidUsed="{{ lookup('ldap' , wantlist=True , context='AllUidNumber', value="uidNumber") }}"
      when: uidNumber is not defined
    - name: create array or uidRange
      set_fact: uidRange="[{% for index in range(5000,6000) %}'{{ index }}',{% endfor %}]"
      when: uidNumber is not defined
    - name: 'set uidNumber min of uidRange difference uidUsed'
      set_fact:
        uidNumber="{{ uidRange | difference(uidUsed) | min }}"    
      when: uidNumber is not defined   
    - name:  Set cn , sn , uidNumber , compagny , gidNumber , loginShell
      set_fact:
        compagny: "{% if compagny is defined %}{{ compagny }}{% else %}{{ mail.split('@')[1].split('.')[0] }}{% endif %}"
        ldap_param1:
          cn: "{% if cn is defined %}{{ cn }}{% else %}{{ mail.split('@')[0].split('.')[1] }}{% endif %}"
          sn: "{% if sn is defined %}{{ sn }}{% else %}{{ mail.split('@')[0].split('.')[0] }}{% endif %}"
          uidNumber: "{{ uidNumber }}"
          gidNumber: "{{ gidNumber | default(uidNumber) }}"
          loginShell: "{{ loginShell |default('/bin/bash') }}"
          mail: "{{ mail }}"
    # uid can use sn + cn so need to do it after :
    - name: Set uid , gecos
      set_fact:
        ldap_param2:
          uid: "{% if uid is defined %}{{ uid }}{% else %}{{ ldap_param1.sn[0:1] }}{{ ldap_param1.cn }}{% endif %}"
          gecos: "{% if gecos is defined %}{{ gecos }}{% else %}{{ ldap_param1.sn }} {{ ldap_param1.cn }}, {{ compagny }}{% endif %}"       
    - name: Set homeDiretory
      set_fact:
        ldap_param3:
          homeDirectory: "{% if homeDirectory is defined %}{{ homeDirectory }}{% else %}/home/{{ ldap_param3.uid }}{% endif %}"
    - name: Set sshPublicKey
      set_fact: 
        ldap_param4:
          sshPublicKey: "{{ sshPublicKey }}"
      when: sshPublicKey is defined
    - name: Set host ssh permit
      set_fact: 
        ldap_param5:
          host: "{{ host }}"
      when: host is defined    
    # Create all variable together (to permit remove empty var
    - name: fusion
      set_fact:
        ldap_param="{{ ldap_param1|combine(ldap_param1|default({}),ldap_param2|default({}),ldap_param3|default({}),ldap_param4|default({}),ldap_param5|default({}), recursive=True) }}"
    - name: debug
      debug:
        var: ldap_param
    - name: Ask Confirmation
      pause: 
        prompt: 'Please confirm you want to create This Unix Account! Press return to continue. Press Ctrl+c and then "a" to abort'
    - name: Create Account
      ldap_entry:
        dn: uid={{ ldap_param.uid }},ou=User,ou=People,{{ dc }}
        server_uri: '{{ server_uri }}'
        bind_dn: '{{ bind_dn }}'
        bind_pw: '{{ bind_pw }}'
        objectClass:
          - shadowAccount
          - top 
          - posixAccount
          - inetAccount
          - account
          - ldapPublicKey
        attributes: "{{ ldap_param }}"

    - name: Add to group 
      ldap_attr:
        dn: "cn=group_name,ou=Group,{{ dc }}"
        name: memberUid
        state: present
        values: "{{ ldap_param.uid }}"
        server_uri: '{{ server_uri }}'
        bind_dn: '{{ bind_dn }}'
        bind_pw: '{{ bind_pw }}'
      when: wiki_access is defined
